name: integration-tests
on:
  push:
    branches:
      - 'dev'
  pull_request:
    branches:
      - 'main'

env:
  HOST_NAME: ${{secrets.HOST_NAME}}
  ALLOW_ROLES: ${{secrets.ALLOW_ROLES}}
  MONGODB_URL: ${{secrets.MONGODB_URL}}
  NEXTAUTH_URL: ${{secrets.NEXTAUTH_URL}}
  JWT_SECRET: ${{secrets.JWT_SECRET}}
  GOOGLE_STORAGE: ${{secrets.GOOGLE_STORAGE}}
  GOOGLE_BUCKET_NAME: ${{secrets.GOOGLE_BUCKET_NAME}}
  GOOGLE_PROJECT_ID: ${{secrets.GOOGLE_PROJECT_ID}}
  GOOGLE_PRIVATE_KEY: ${{secrets.GOOGLE_PRIVATE_KEY}}
  GOOGLE_CLIENT_EMAIL: ${{secrets.GOOGLE_CLIENT_EMAIL}}

jobs:
  # note: Ubuntu 16 probably works, but is deprecated

  # basic-ubuntu-18:
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Start project
  #       run: |
  #         npm install .
  #         npm run dev

  #     - name: Cypress tests
  #       # normally you would write
  #       uses: cypress-io/github-action@v2
  #       # uses: ./
  #       # the parameters below are only necessary
  #       # because we are running these examples in a monorepo
  #       # with:
  #         # working-directory: cypress/integration
  #         # just for full picture after installing Cypress
  #         # print information about detected browsers, etc
  #         # see https://on.cypress.io/command-line#cypress-info
  #         # build: npx cypress info

  basic-ubuntu-20:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build Project & Test
        run: |
          echo -e "HOST_NAME=${{secrets.HOST_NAME}}\n"\
                  "ALLOW_ROLES=${{secrets.ALLOW_ROLES}}\n"\
                  "MONGODB_URL=${{secrets.MONGODB_URL}}\n"\
                  "NEXTAUTH_URL=${{secrets.NEXTAUTH_URL}}\n"\
                  "JWT_SECRET=${{secrets.JWT_SECRET}}\n"\
                  "GOOGLE_STORAGE=${{secrets.GOOGLE_STORAGE}}\n"\
                  "GOOGLE_BUCKET_NAME=${{secrets.GOOGLE_BUCKET_NAME}}\n"\
                  "GOOGLE_PROJECT_ID=${{secrets.GOOGLE_PROJECT_ID}}\n"\
                  "GOOGLE_PRIVATE_KEY=${{secrets.GOOGLE_PRIVATE_KEY}}\n"\
                  "GOOGLE_CLIENT_EMAIL=${{secrets.GOOGLE_CLIENT_EMAIL}}" > .env.local
          npm install .
          npm run build && npm run e2e:headless


  # skips the binary installation
  # shows that the job should not fail
  # https://github.com/cypress-io/github-action/issues/327
  basic-without-binary-install:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cypress tests
        uses: cypress-io/github-action@v2
        with:
          runTests: false
        env:
          # skip the binary install
          CYPRESS_INSTALL_BINARY: 0